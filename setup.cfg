# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

# setup.cfg updated content
[metadata]
name = science-jubilee
author = Machine Agency, Pozzo Research Group
author_email = b1air@uw.edu, politim@uw.edu, bgpelkie@uw.edu
description = Make science with Jubilee
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/machineagency/science-jubilee
project_urls =
    Documentation = https://science-jubilee.readthedocs.io/
    Source = https://github.com/machineagency/science-jubilee
    # Changelog = https://github.com/machineagency/science-jubilee/latest/changelog.html
    Tracker = https://github.com/machineagency/science-jubilee/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
#    Download = https://pypi.org/project/science-jubilee/#files
    Twitter = https://twitter.com/machine_agency
license = MIT
license_files = LICENSE.txt
keywords = jubilee, science
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python :: 3
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent

platforms = any

[options]
zip_safe = False
include_package_data = True
packages = find:
python_requires = >=3.8
install_requires =
    pyserial #==3.5
    requests
    numpy
    Jinja2
    ipywidgets


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install science-jubilee[PDF]` like:
# PDF = ReportLab; RXP
camera =
    opencv_contrib_python #==4.5.3.56
    picamera; platform_machine=='aarch64'
    matplotlib

sonicator =
    Adafruit-Blinka
    adafruit-mcp4725

spectrometer =
    matplotlib

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov
    pre-commit
    sphinx
    tox


[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = science_jubilee.module:function
# For example:
# console_scripts =
#     fibonacci = science_jubilee.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    # --cov science_jubilee --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.5
package = science-jubilee
extensions =
    markdown
    no_skeleton
    github_actions
